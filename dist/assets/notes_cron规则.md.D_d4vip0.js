import{_ as i,C as e,c as p,o as l,j as a,G as t,aj as r,a as d}from"./chunks/framework.CsqNip8P.js";const E=JSON.parse('{"title":"cron规则讲解","description":"","frontmatter":{},"headers":[],"relativePath":"notes/cron规则.md","filePath":"notes/cron规则.md","lastUpdated":1752301890000}'),o={name:"notes/cron规则.md"};function h(c,s,b,k,u,m){const n=e("ArticleMetadata");return l(),p("div",null,[s[0]||(s[0]=a("h1",{id:"cron规则讲解",tabindex:"-1"},[d("cron规则讲解 "),a("a",{class:"header-anchor",href:"#cron规则讲解","aria-label":'Permalink to "cron规则讲解"'},"​")],-1)),t(n),s[1]||(s[1]=r(`<h2 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-label="Permalink to &quot;基础&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌──────────── [可选] 秒 (0 - 59)</span></span>
<span class="line"><span>| ┌────────── 分钟 (0 - 59)</span></span>
<span class="line"><span>| | ┌──────── 小时 (0 - 23)</span></span>
<span class="line"><span>| | | ┌────── 天数 (1 - 31)</span></span>
<span class="line"><span>| | | | ┌──── 月份 (1 - 12) OR jan,feb,mar,apr ...</span></span>
<span class="line"><span>| | | | | ┌── 星期几 (0 - 6, 星期天 = 0) OR sun,mon ...</span></span>
<span class="line"><span>| | | | | |</span></span>
<span class="line"><span>* * * * * * 命令</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>除了基本的数字范围外，Cron 表达式还支持一些特殊符号和字符：</p><ul><li>星号（<em>）：表示匹配任意值。例如，</em> 在分钟字段中表示每分钟都执行。</li><li>逗号（,）：用于分隔多个值。例如，1,3,5 在小时字段中表示 1 点、3 点和 5 点执行。</li><li>斜线（/）：用于指定间隔值。例如，*/5 在分钟字段中表示每 5 分钟执行一次。</li><li>连字符（-）：用于指定范围。例如，10-20 在日期字段中表示从 10 号到 20 号。</li><li>问号（?）：仅用于日期和星期几字段，表示不指定具体值。通常用于避免冲突。</li></ul><blockquote><p>10/10 * * * * 从第10秒开始，10秒运行一次，运行示例：</p><p>2025-07-12 13:47:10</p><p>2025-07-12 13:47:20</p><p>2025-07-12 13:47:30</p></blockquote><blockquote><p>0 0 6 * * 每天6时执行一次，运行示例：</p><p>2025-07-13 06:00:00</p><p>2025-07-14 06:00:00</p><p>2025-07-15 06:00:00</p></blockquote><h2 id="应用" tabindex="-1">应用 <a class="header-anchor" href="#应用" aria-label="Permalink to &quot;应用&quot;">​</a></h2><p>在github工作流（workflows）中，有这么一段代码，使用cron进行定时操作，到22：30分触发操作</p><p><img src="https://yhyper.dpdns.org/photostore/2025/07/image-20250712135459232.png" alt="image-20250712135459232" loading="lazy"></p><p>拓展代码，触发方式</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-WqaNq" id="tab-90SQk4q" checked><label data-title="提交后触发" for="tab-90SQk4q">提交后触发</label><input type="radio" name="group-WqaNq" id="tab-XMdi3yD"><label data-title="发布后触发" for="tab-XMdi3yD">发布后触发</label><input type="radio" name="group-WqaNq" id="tab-qJnK3kp"><label data-title="定时触发" for="tab-qJnK3kp">定时触发</label><input type="radio" name="group-WqaNq" id="tab-p76Hx2t"><label data-title="手动触发" for="tab-p76Hx2t">手动触发</label></div><div class="blocks"><div class="language-yml vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    branches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-yml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">deployment</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-yml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  schedule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cron</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0 0 * * *&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-yml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  workflow_dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div></div>`,11))])}const y=i(o,[["render",h]]);export{E as __pageData,y as default};
